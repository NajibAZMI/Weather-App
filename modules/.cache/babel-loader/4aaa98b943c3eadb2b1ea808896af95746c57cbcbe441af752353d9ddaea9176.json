{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\weatherapp\\\\src\\\\Components\\\\SearchBar\\\\SearchBar.jsx\";\nimport { Button, Form } from \"react-bootstrap\";\nimport styles from \"./SearchBar.module.scss\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = () => {\n  const GEOAPIKEY = process.env.REACT_APP_GEO_API_KEY;\n  const [cities, SetCities] = use;\n  const handleInput = e => {\n    const {\n      value\n    } = e.currentTarget;\n    fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${value}&type=city&format=json&apiKey=${GEOAPIKEY}`).then(response => response.json()).then(result => console.log(result.results.map(data => {\n      const {\n        lat,\n        lon,\n        city,\n        country\n      } = data;\n      return lat, lon, city, country;\n    }))).catch(error => console.log('error', error));\n    console.log(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: styles.searchContainer,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          className: styles.searchInput,\n          size: 'lg',\n          clearOnBlur: false,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInput,\n            ...params,\n            label: 'Enter your City ....'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 20\n          }, this),\n          options: ['Casa', 'Rabat', 'Laayoun']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.searchButton,\n          variant: \"primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["Button","Form","styles","Autocomplete","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","GEOAPIKEY","process","env","REACT_APP_GEO_API_KEY","cities","SetCities","use","handleInput","e","value","currentTarget","fetch","then","response","json","result","console","log","results","map","data","lat","lon","city","country","catch","error","children","Group","className","searchContainer","searchInput","size","clearOnBlur","renderInput","params","onChange","label","fileName","_jsxFileName","lineNumber","columnNumber","options","searchButton","variant","_c","$RefreshReg$"],"sources":["C:/react/weatherapp/src/Components/SearchBar/SearchBar.jsx"],"sourcesContent":["import { Button, Form } from \"react-bootstrap\"\r\nimport styles from \"./SearchBar.module.scss\"\r\nimport { Autocomplete, TextField } from \"@mui/material\"\r\nexport const SearchBar=()=> {\r\n  const GEOAPIKEY=process.env.REACT_APP_GEO_API_KEY\r\n  const [cities,SetCities]=use\r\n  const handleInput=(e)=>{\r\n    const {value}=e.currentTarget\r\n    fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${value}&type=city&format=json&apiKey=${GEOAPIKEY}`)\r\n    .then(response => response.json())\r\n    .then(result => console.log(result.results.map(data=>{\r\n      const {lat,lon,city,country}=data\r\n      return(lat,lon,city,country)})))\r\n                                             \r\n    .catch(error => console.log('error', error));\r\n     console.log(value)\r\n  }\r\n  return (\r\n   <>\r\n   <Form >\r\n         <Form.Group className={styles.searchContainer}> \r\n          <Autocomplete className={styles.searchInput}  size={'lg'} clearOnBlur={false}\r\n                   renderInput={(params)=>\r\n                   <TextField  onChange={handleInput}  {...params} label={'Enter your City ....'}/>} \r\n                   options={['Casa','Rabat','Laayoun']}/> \r\n          \r\n              <Button className={styles.searchButton} variant=\"primary\" >Search</Button>   \r\n        </Form.Group>              \r\n   </Form>\r\n   </>\r\n  )\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvD,OAAO,MAAMC,SAAS,GAACA,CAAA,KAAK;EAC1B,MAAMC,SAAS,GAACC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACjD,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACC,GAAG;EAC5B,MAAMC,WAAW,GAAEC,CAAC,IAAG;IACrB,MAAM;MAACC;IAAK,CAAC,GAACD,CAAC,CAACE,aAAa;IAC7BC,KAAK,CAAC,yDAAyDF,KAAK,iCAAiCT,SAAS,EAAE,CAAC,CAChHY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAACC,GAAG,CAACC,IAAI,IAAE;MACnD,MAAM;QAACC,GAAG;QAACC,GAAG;QAACC,IAAI;QAACC;MAAO,CAAC,GAACJ,IAAI;MACjC,OAAOC,GAAG,EAACC,GAAG,EAACC,IAAI,EAACC,OAAO;IAAC,CAAC,CAAC,CAAC,CAAC,CAEjCC,KAAK,CAACC,KAAK,IAAIV,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,KAAK,CAAC,CAAC;IAC3CV,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACrB,CAAC;EACD,oBACCb,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA,CAACL,IAAI;MAAAoC,QAAA,eACC/B,OAAA,CAACL,IAAI,CAACqC,KAAK;QAACC,SAAS,EAAErC,MAAM,CAACsC,eAAgB;QAAAH,QAAA,gBAC7C/B,OAAA,CAACH,YAAY;UAACoC,SAAS,EAAErC,MAAM,CAACuC,WAAY;UAAEC,IAAI,EAAE,IAAK;UAACC,WAAW,EAAE,KAAM;UACpEC,WAAW,EAAGC,MAAM,iBACpBvC,OAAA,CAACF,SAAS;YAAE0C,QAAQ,EAAE7B,WAAY;YAAA,GAAM4B,MAAM;YAAEE,KAAK,EAAE;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAE;UACjFC,OAAO,EAAE,CAAC,MAAM,EAAC,OAAO,EAAC,SAAS;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE3C7C,OAAA,CAACN,MAAM;UAACuC,SAAS,EAAErC,MAAM,CAACmD,YAAa;UAACC,OAAO,EAAC,SAAS;UAAAjB,QAAA,EAAE;QAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACL,CAAC;AAEN,CAAC;AAAAI,EAAA,GA5BY9C,SAAS;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}